#pragma once

#include "llvm/Support/CommandLine.h"


#define INSTRUMENTSTAGE_ENUM_TA                 \
        ,                                       \
        Test

#define INSTRUMENTSTAGE_CL_ENUM_TA              \
                                               \
        clEnumVal(Onnx, "Profile for onnx ops"),\
        clEnumVal(Test, "TA profiling for test ops")

#define PROFILEIR_CL_ENUM_TA                    \
        ,                                       \
        clEnumVal(Test, "Profile operations in TestIR generated by "   \
                        "--EmitTestIR")


namespace onnx_mlir {

typedef enum{
    EmitTestNone,
    EmitTestIR,
} TAEmissionTargetType;

extern llvm::cl::OptionCategory OnnxMlirOptions;
extern llvm::cl::opt<onnx_mlir::TAEmissionTargetType> taEmissionTarget;
extern llvm::cl::list<std::string> execNodesOnCpu;
extern llvm::cl::opt<bool> taEnableTestToOnnx;
extern llvm::cl::opt<bool> profileTestIR;

} // namespace onnx_mlir